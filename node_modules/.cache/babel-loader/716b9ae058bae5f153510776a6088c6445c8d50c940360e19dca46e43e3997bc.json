{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\talrn-clone\\\\src\\\\components\\\\OTPVerify.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function OTPVerify() {\n  _s();\n  const [otp, setOtp] = useState(\"\");\n  const navigate = useNavigate();\n  const email = localStorage.getItem(\"userEmail\");\n  const handleVerify = async e => {\n    e.preventDefault();\n    try {\n      await axios.post(\"http://localhost:5000/verify-otp\", {\n        email,\n        otp\n      });\n      navigate(\"/success\");\n    } catch (error) {\n      alert(\"Invalid OTP. Try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\",\n      marginTop: \"50px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Verify OTP\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleVerify,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter OTP\",\n        value: otp,\n        onChange: e => setOtp(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Verify\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(OTPVerify, \"6v7tEjCA+J9QwSnlvgXXLo6k5GQ=\", false, function () {\n  return [useNavigate];\n});\n_c = OTPVerify;\nvar _c;\n$RefreshReg$(_c, \"OTPVerify\");","map":{"version":3,"names":["React","useState","axios","useNavigate","jsxDEV","_jsxDEV","OTPVerify","_s","otp","setOtp","navigate","email","localStorage","getItem","handleVerify","e","preventDefault","post","error","alert","style","textAlign","marginTop","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/Projects/talrn-clone/src/components/OTPVerify.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport default function OTPVerify() {\r\n  const [otp, setOtp] = useState(\"\");\r\n  const navigate = useNavigate();\r\n  const email = localStorage.getItem(\"userEmail\");\r\n\r\n  const handleVerify = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await axios.post(\"http://localhost:5000/verify-otp\", { email, otp });\r\n      navigate(\"/success\");\r\n    } catch (error) {\r\n      alert(\"Invalid OTP. Try again.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ textAlign: \"center\", marginTop: \"50px\" }}>\r\n      <h2>Verify OTP</h2>\r\n      <form onSubmit={handleVerify}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter OTP\"\r\n          value={otp}\r\n          onChange={(e) => setOtp(e.target.value)}\r\n          required\r\n        />\r\n        <button type=\"submit\">Verify</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,eAAe,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EAClC,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAMS,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAC9B,MAAMQ,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;EAE/C,MAAMC,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI;MACF,MAAMd,KAAK,CAACe,IAAI,CAAC,kCAAkC,EAAE;QAAEN,KAAK;QAAEH;MAAI,CAAC,CAAC;MACpEE,QAAQ,CAAC,UAAU,CAAC;IACtB,CAAC,CAAC,OAAOQ,KAAK,EAAE;MACdC,KAAK,CAAC,yBAAyB,CAAC;IAClC;EACF,CAAC;EAED,oBACEd,OAAA;IAAKe,KAAK,EAAE;MAAEC,SAAS,EAAE,QAAQ;MAAEC,SAAS,EAAE;IAAO,CAAE;IAAAC,QAAA,gBACrDlB,OAAA;MAAAkB,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnBtB,OAAA;MAAMuB,QAAQ,EAAEd,YAAa;MAAAS,QAAA,gBAC3BlB,OAAA;QACEwB,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,WAAW;QACvBC,KAAK,EAAEvB,GAAI;QACXwB,QAAQ,EAAGjB,CAAC,IAAKN,MAAM,CAACM,CAAC,CAACkB,MAAM,CAACF,KAAK,CAAE;QACxCG,QAAQ;MAAA;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,eACFtB,OAAA;QAAQwB,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAACpB,EAAA,CA9BuBD,SAAS;EAAA,QAEdH,WAAW;AAAA;AAAAgC,EAAA,GAFN7B,SAAS;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}