{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\talrn-clone\\\\src\\\\components\\\\OTPVerify.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport \"./OTPVerify.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function OTPVerify() {\n  _s();\n  var _location$state;\n  const [otp, setOtp] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  // Get email passed from Login.js\n  const email = ((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.email) || localStorage.getItem(\"userEmail\");\n\n  // Store email in case user refreshes\n  if (email) {\n    localStorage.setItem(\"userEmail\", email);\n  }\n  const handleVerify = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setMessage(\"\");\n    try {\n      const res = await axios.post(\"http://localhost:5000/verify-otp\", {\n        email,\n        otp\n      });\n      if (res.data.success) {\n        setMessage(\"OTP verified successfully!\");\n        setTimeout(() => navigate(\"/success\"), 1000);\n      } else {\n        setMessage(\"Invalid OTP. Please try again.\");\n      }\n    } catch (err) {\n      console.error(\"OTP verification failed:\", err);\n      setMessage(\"Server error. Try again later.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleResend = async () => {\n    setLoading(true);\n    setMessage(\"\");\n    try {\n      await axios.post(\"http://localhost:5000/resend-otp\", {\n        email\n      });\n      setMessage(\"A new OTP has been sent to your email.\");\n    } catch {\n      setMessage(\"Failed to resend OTP. Try again later.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"otp-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Verify OTP\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"info-text\",\n      children: [\"We\\u2019ve sent a 6-digit OTP to \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 37\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleVerify,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter OTP\",\n        value: otp,\n        onChange: e => setOtp(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn-primary\",\n        disabled: loading,\n        children: loading ? \"Verifying...\" : \"Verify\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"status\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleResend,\n      className: \"resend-btn\",\n      disabled: loading,\n      children: \"Resend OTP\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(OTPVerify, \"Sf8uSCTucJLa9UCajNTA9VGignI=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = OTPVerify;\nvar _c;\n$RefreshReg$(_c, \"OTPVerify\");","map":{"version":3,"names":["React","useState","axios","useNavigate","useLocation","jsxDEV","_jsxDEV","OTPVerify","_s","_location$state","otp","setOtp","loading","setLoading","message","setMessage","navigate","location","email","state","localStorage","getItem","setItem","handleVerify","e","preventDefault","res","post","data","success","setTimeout","err","console","error","handleResend","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","disabled","onClick","_c","$RefreshReg$"],"sources":["C:/Projects/talrn-clone/src/components/OTPVerify.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport \"./OTPVerify.css\";\r\n\r\nexport default function OTPVerify() {\r\n  const [otp, setOtp] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n\r\n  // Get email passed from Login.js\r\n  const email = location.state?.email || localStorage.getItem(\"userEmail\");\r\n\r\n  // Store email in case user refreshes\r\n  if (email) {\r\n    localStorage.setItem(\"userEmail\", email);\r\n  }\r\n\r\n  const handleVerify = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setMessage(\"\");\r\n\r\n    try {\r\n      const res = await axios.post(\"http://localhost:5000/verify-otp\", { email, otp });\r\n\r\n      if (res.data.success) {\r\n        setMessage(\"OTP verified successfully!\");\r\n        setTimeout(() => navigate(\"/success\"), 1000);\r\n      } else {\r\n        setMessage(\"Invalid OTP. Please try again.\");\r\n      }\r\n    } catch (err) {\r\n      console.error(\"OTP verification failed:\", err);\r\n      setMessage(\"Server error. Try again later.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleResend = async () => {\r\n    setLoading(true);\r\n    setMessage(\"\");\r\n    try {\r\n      await axios.post(\"http://localhost:5000/resend-otp\", { email });\r\n      setMessage(\"A new OTP has been sent to your email.\");\r\n    } catch {\r\n      setMessage(\"Failed to resend OTP. Try again later.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"otp-container\">\r\n      <h2>Verify OTP</h2>\r\n      <p className=\"info-text\">\r\n        Weâ€™ve sent a 6-digit OTP to <strong>{email}</strong>\r\n      </p>\r\n\r\n      <form onSubmit={handleVerify}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter OTP\"\r\n          value={otp}\r\n          onChange={(e) => setOtp(e.target.value)}\r\n          required\r\n        />\r\n        <button type=\"submit\" className=\"btn-primary\" disabled={loading}>\r\n          {loading ? \"Verifying...\" : \"Verify\"}\r\n        </button>\r\n      </form>\r\n\r\n      {message && <p className=\"status\">{message}</p>}\r\n\r\n      <button onClick={handleResend} className=\"resend-btn\" disabled={loading}>\r\n        Resend OTP\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}